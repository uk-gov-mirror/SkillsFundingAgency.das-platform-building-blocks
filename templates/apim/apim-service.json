{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimName": {
      "type": "string"
    },
    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Consumption",
        "Developer",
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "string",
      "allowedValues": [
        "1",
        "2"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "virtualNetworkType": {
      "type": "string",
      "allowedValues": [
        "None",
        "Internal",
        "External"
      ],
      "defaultValue": "None"
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": ""
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": ""
    },
    "subnetName": {
      "type": "string",
      "defaultValue": ""
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": ""
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": ""
    },
    "portalHostname": {
      "type": "string",
      "defaultValue": ""
    },
    "portalKeyVaultCertificateName": {
      "type": "string",
      "defaultValue": ""
    },
    "gatewayHostname": {
      "type": "string",
      "defaultValue": ""
    },
    "gatewayKeyVaultCertificateName": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "userAssignedIdentityName": "[concat(parameters('apimName'), '-umi')]",
    "deployCustomHostnames": "[and(greater(length(parameters('portalKeyVaultCertificateName')), 0), greater(length(parameters('gatewayKeyVaultCertificateName')), 0))]",
    "deployToNetwork": "[and(greater(length(parameters('virtualNetworkName')), 0), not(equals(parameters('virtualNetworkType'), 'None')))]",
    "subnetResourceId": "[concat(resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/', parameters('subnetName'))]",
    "vnetConfiguration": {
      "subnetResourceId": "[variables('subnetResourceId')]"
    }
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "[concat(parameters('apimName'),'-user-assigned-identity')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'user-assigned-identity.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "userAssignedIdentityName": {
            "value": "[variables('userAssignedIdentityName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat(parameters('apimName'),'-keyvault-accesspolicy')]",
      "resourceGroup": "[parameters('keyVaultResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "condition": "[variables('deployCustomHostnames')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'keyvault-accesspolicies.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyvaultName')]"
          },
          "accessPolicies": {
            "value": [
              {
                "objectId": "[reference(concat(parameters('apimName'),'-user-assigned-identity')).outputs.objectId.value]",
                "tenantId": "[reference(concat(parameters('apimName'),'-user-assigned-identity')).outputs.tenantId.value]",
                "permissions": {
                  "secrets": [
                    "Get"
                  ]
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[concat(parameters('apimName'),'-user-assigned-identity')]"
      ]
    },
    {
      "apiVersion": "2019-12-01",
      "name": "[parameters('apimName')]",
      "condition": "[variables('deployCustomHostnames')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat(parameters('apimName'),'-keyvault-accesspolicy')]"
      ],
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "hostnameConfigurations": [
          {
            "type": "DeveloperPortal",
            "hostName": "[parameters('portalHostname')]",
            "keyVaultId": "[if(variables('deployCustomHostnames'), reference(resourceId(parameters('keyVaultResourceGroup'), 'Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('portalKeyVaultCertificateName')), '2018-02-14').secretUriWithVersion, json('null'))]",
            "negotiateClientCertificate": false
          },
          {
            "type": "Proxy",
            "hostName": "[parameters('gatewayHostname')]",
            "keyVaultId": "[if(variables('deployCustomHostnames'), reference(resourceId(parameters('keyVaultResourceGroup'), 'Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('gatewayKeyVaultCertificateName')), '2018-02-14').secretUriWithVersion, json('null'))]",
            "negotiateClientCertificate": false
          }
        ],
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]",
        "virtualNetworkConfiguration": "[if(variables('deployToNetwork'), variables('vnetConfiguration'), json('null'))]",
        "virtualNetworkType": "[parameters('virtualNetworkType')]"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userAssignedIdentityName'))]": {
          }
        }
      }
    }
  ]
}
